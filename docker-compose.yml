version: '3.8'

services:
  mongo:
    container_name: mongo_container
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - weathernet

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/


  # pgadmin:
  #   container_name: pgadmin_container
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #   volumes:
  #      - pgadmin:/var/lib/pgadmin

  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - dockernet
  #   restart: unless-stopped

  api:
    container_name: api_open_weather
    build: .
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    # environment:
    #   DB_USER: ${DB_USER}
    #   DB_PASSWD: ${DB_PASSWD}
    #   DB_NAME: ${DB_NAME}
    #   DB_HOST: ${DB_HOST}
    #   DB_PORT: ${DB_PORT}
    #   DATABASE_URL: ${DATABASE_URL}
    #   HUBSPOT_APP_TOKEN: ${HUBSPOT_APP_TOKEN}
    #   PYTHONPATH: ${PYTHONPATH}
    networks:
      - weathernet
    restart: always

networks:
  weathernet:
    name: weathernet
    driver: bridge

# volumes:
#     postgres:
#     pgadmin: